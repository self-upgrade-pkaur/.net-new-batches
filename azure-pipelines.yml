# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
variables:
  buildConfiguration: 'Release'
  pathtosolution: ContactApp/
  pathtoproject: 'ContactApp/Web'
  pathtoTest: 'ContactApp/Test'
pool:
  vmImage: 'windows-2019'
steps:
  # - script: echo First step!
- script: dotnet build --configuration $(buildConfiguration)
  workingDirectory: $(pathtosolution)
  displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(pathtoproject)/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- script: dotnet test **/*Test*.csproj
    --configuration $(buildConfiguration)
    --logger trx
    --no-build
  workingDirectory: $(solutionDir)
  displayName: Test
# - task: VSTest@2
#   inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: '**\*Test*.dll
#       !**\*TestAdapter.dll
#       !**\obj\**'
#     searchFolder: '$(pathtoTest)'
#     codeCoverageEnabled: true
#     testRunTitle: 'Test Report'
#     platform: 'Test Build Platform'
#     configuration: 'Test Build Config'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'KaurrevatureCon'
    appType: 'webApp'
    WebAppName: 'contactapplearn'
    packageForLinux: '$(System.DefaultWorkingDirectory)/$(pathtoproject)/**/*.zip'

# stages:
# - stage: Build
#   jobs:
#   - job: BuildJob
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#       - script: echo Building!

# - stage: Test
#   jobs:
#   - job: TestOnWindows
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: echo Testing on Windows!
#       displayName: Test On Windows Log
#   - job: TestOnLinux
#     steps:
#     - script: echo Testing on Linux!
#       displayName: Test On Linux Log
  

# - stage: Deploy
#   jobs:
#   - job: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: echo Deploying the code!
#       displayName: Deploy Log